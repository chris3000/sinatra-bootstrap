%link{:href => "/js/select2-3.2/select2.css", :rel => "stylesheet"}
%script{:src => "/js/select2-3.2/select2.min.js"}
:javascript
  associationsSubmit = {};
  fieldsSubmit = {};
  function addToFieldsSubmit(field_id, field_value){
      fieldsSubmit[field_id] = field_value;
      console.log(""+JSON.stringify(fieldsSubmit));
  }

  function saveChanges(url){
    submit = {fields:fieldsSubmit, associations:associationsSubmit};
    $.ajax(url, {
        data : submit,
        dataType : 'json',
        type : 'POST'
        }).done(function (data, textStatus, jqXHR){
          console.log("success- "+JSON.stringify(data));
          console.log("success- "+textStatus);
          console.log("success- "+JSON.stringify(jqXHR));
          if (data.status == "failure") {
            handle_failure (data)
          } else {
             window.location = "/admin/#{model[:model_name].downcase}/show/#{model[:id]}";
          }
        }).fail(function (jqXHR, textStatus, errorThrown){
           console.log("fail- "+errorThrown);
           console.log("fail- "+textStatus);
           console.log("fail- "+JSON.stringify(jqXHR));
        });
  }

  function postJSON(path, parameters) {
      var form = $('<form></form>');

      form.attr("method", "post");
      form.attr("action", path);

      $.each(parameters, function(key, value) {
          var field = $('<input></input>');

          field.attr("type", "hidden");
          field.attr("name", key);
          field.attr("value", value);

          form.append(field);
      });

      // The form needs to be a part of the document in
      // order for us to be able to submit it.
      $(document.body).append(form);
      form.submit();
  }

#flash_error.alert.alert-error{:style => "display: none;"}
#flash_info.alert.alert-info{:style => "display: none;"}
.well.well-small
  %h3
    = "Edit #{model[:model_name]} #{model[:human_id]}"
  %form.form-horizontal
    %fieldset
      -puts model[:fields].inspect
      -model[:fields].each do |field_name, field_value|
        .control-group
          %label.control-label{:for => "#{field_name.to_s}"}
            = field_name.to_s
          .controls
            - if field_value[:type] == String
              -if field_name.to_s.downcase =~ /password/
                %input{:type => "password", :id => "#{field_name.to_s}", :value =>"#{field_value[:value]}", :onchange => "addToFieldsSubmit(this.id, this.value);"}
              -elsif field_name.to_s.downcase =~ /email/
                %input{:type => "email", :id => "#{field_name.to_s}", :value =>"#{field_value[:value]}", :onchange => "addToFieldsSubmit(this.id, this.value);"}
              -else
                %input{:type => "text", :id => "#{field_name.to_s}", :value =>"#{field_value[:value]}", :onchange => "addToFieldsSubmit(this.id, this.value);"}
            - elsif field_value[:type] == Boolean
              %input{:type => "checkbox", :id => "#{field_name.to_s}", :checked => field_value[:value], :value =>"#{field_name.to_s}", :onchange => "addToFieldsSubmit(this.id, this.checked);"}
            - elsif field_value[:type] == Date || field_value[:type] == Time || field_value[:type] == DateTime
              %input{:type => "date", :id => "#{field_name.to_s}", :value =>"#{field_value[:value]}", :onchange => "addToFieldsSubmit(this.id, this.value);"}
            - elsif field_value[:type] == Integer || field_value[:type] == Float
              %input{:type => "number", :id => "#{field_name.to_s}", :value =>field_value[:value], :onchange => "addToFieldsSubmit(this.id, this.value);"}
    - puts "#{association_lists.to_json}"
    - model[:associations].each do |assoc, ass_value|
      -puts "assoc = #{assoc.inspect}, ass_value=#{ass_value}"
      - ass_value.each do |av|
        -av.each do |av_key, av_value|
          %div
            %div{:style => "padding-top: 5px; padding-bottom: 5px;"}
              %strong
                #{av_key}
              %span.badge #{av_value[:count]}
            - mult = "multiple" if assoc.to_s =~ /many/
            %select{:id => "#{av_key}", :multiple => mult, :style => "width:400px;"}
              -id_ignore = []
              -if mult.nil?
                %option{:value => "--none--"} --none--
              -av_value[:ids].each do |id|
                - id_ignore << id[:id]
                %option{:value => "#{id[:id]}", :selected=>true} #{id[:human_id]}
              -association_lists[av_value[:class_name].downcase.to_sym][:ids].each do |id|
                -unless id_ignore.include? id[:id]
                  %option{:value => "#{id[:id]}"} #{id[:human_id]}
  %button.btn-primary{:type => "submit", :name => "save", :onclick => "saveChanges('/admin/#{model[:model_name].downcase}/update/#{model[:id]}');"}
    %i.icon-ok.icon-white
    Save #{model[:human_id]}
:javascript
  $('select').each(function(){
    $(this).select2();
    //console.log(ass_name);
    $(this).on("change", function(e){
       //console.log($(this).data('association_name'));
       var ass_sub = associationsSubmit[$(this).attr('id')];
       if (ass_sub == null) {
        associationsSubmit[$(this).attr('id')] = {};
        ass_sub = associationsSubmit[$(this).attr('id')];
       }
       if (e.added != null){
         ass_sub[e.added.id] = "add";
       }
       else if (e.removed != null){
         ass_sub[e.removed.id] = "remove";
       } else {
        //console.log(e.val)
        var record = {};
        if (e.val == '--none--'){
          record[e.val] = "remove";
        }else {
          record[e.val]="add";
        }
        associationsSubmit[$(this).attr('id')] = record;
       }
       console.log(associationsSubmit);
    });
  });


