:javascript
  fieldsSubmit = {};
  function addToFieldsSubmit(){

  }
#flash_error.alert.alert-error{:style => "display: none;"}
#flash_info.alert.alert-info{:style => "display: none;"}
.well.well-small
  %h3
    = "Edit #{model[:model_name]} #{model[:human_id]}"
  %form.form-horizontal
    %fieldset
      -model[:fields].each do |field_name, field_value|
        .control-group
          %label.control-label{:for => "#{field_name.to_s}"}
            = field_name.to_s
          .controls
            - if field_value[:type] == String
              -if !field_value[:value].nil? && field_value[:value].downcase =~ /password/
                %input{:type => "password", :id => "#{field_name.to_s}", :value =>"#{field_value[:value]}"}
              -elsif !field_value[:value].nil? && field_value[:value].downcase =~ /email/
                %input{:type => "email", :id => "#{field_name.to_s}", :value =>"#{field_value[:value]}"}
              -else
                %input{:type => "text", :id => "#{field_name.to_s}", :value =>"#{field_value[:value]}"}
            - elsif field_value[:type] == Boolean
              %input{:type => "checkbox", :id => "#{field_name.to_s}", :checked => "#{field_value[:value]}", :value =>"#{field_name.to_s}"}
            - elsif field_value[:type] == Date || field_value[:type] == Time || field_value[:type] == DateTime
              %input{:type => "date", :id => "#{field_name.to_s}", :value =>"#{field_value[:value]}"}
            - elsif field_value[:type] == Integer || field_value[:type] == Float
              %input{:type => "number", :id => "#{field_name.to_s}", :value =>"#{field_value[:value]}"}

    - model[:associations].each do |assoc, ass_value|
      -puts "assoc = #{assoc.inspect}, ass_value=#{ass_value}"
      - ass_value.each do |av|
        -av.each do |av_key, av_value|
          %div
            %div{:style => "padding-top: 5px; padding-bottom: 5px;"}
              %strong
                #{av_key}
              %span.badge #{av_value[:count]}
            %select{:id => "#{av_key}_select"}
              -if av_value[:count] == 0
                %option{:value => ""} --none--
              -av_value[:ids].each do |id|
                %option{:value => "#{id[:id]}"} #{id[:human_id]}
            -if av_value[:count] > 0
              %input.btn.btn-info.btn-mini{:type => "button", :value => "Show #{av_value[:class_name]}", :name => "show", :onclick => "console.log('click!');location.href= '/admin/#{av_value[:class_name].downcase}/show/'+$('##{av_key}_select').val();"}
%br
%a.btn.btn-primary.btn-mini{:type => "submit", :name => "edit", :href => "/admin/#{model[:model_name].downcase}/edit/#{model[:id]}"}
  %i.icon-edit.icon-white
  Edit #{model[:human_id]}
%a.btn.btn-danger.btn-mini{:type => "submit", :name => "delete", :onclick => "launch_delete_confirm_modal('#{model[:model_name].downcase}', '#{model[:human_id]}', '#{model[:id]}',this);"}
  %i.icon-remove.icon-white
  Delete #{model[:human_id]}

/ delete modal div
.container
  #delete_modal.modal.hide.fade{:tabindex => "-1", :role => "dialog", :"aria-labeledby" => "deleteModal", :"aria-hidden" => "true"}
    .modal-header
      %button.close{:type => "button", :"data-dismiss" => "modal", :"aria-hidden" => "true"} x
      %h3#deleteModal Delete Confirm
      .modal-body
        %p
          #modal_body_confirm
            /this gets replaced with proper info with javascript
            = "Are you sure you want to delete ...?"
      .modal-footer
        %button.btn{:"data-dismiss" => "modal", :"aria-hidden" => "true"} Cancel
        /value will get set with record id when modal is activated
        %button.btn-primary#delete_confirm_button{:type => "submit", :onclick => "delete_model_record(delete_info.record_id, delete_info.url, delete_info.table_index)"} Delete
